// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Snippit.Data;

namespace Snippit.Migrations
{
    [DbContext(typeof(SnippitContext))]
    [Migration("20210527135805_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Snippit.Models.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("SnippitId")
                        .HasColumnType("int");

                    b.Property<int?>("SnippitId1")
                        .HasColumnType("int");

                    b.HasKey("LanguageId");

                    b.HasIndex("SnippitId1");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Snippit.Models.LanguageAssignment", b =>
                {
                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<int>("SnippitID")
                        .HasColumnType("int");

                    b.HasKey("LanguageID", "SnippitID");

                    b.HasIndex("SnippitID");

                    b.ToTable("LanguageAssignment");
                });

            modelBuilder.Entity("Snippit.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Snippit.Models.Snippit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("Snippit.Models.Author", b =>
                {
                    b.HasBaseType("Snippit.Models.Person");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("Snippit.Models.Moderator", b =>
                {
                    b.HasBaseType("Snippit.Models.Person");

                    b.ToTable("Moderator");
                });

            modelBuilder.Entity("Snippit.Models.Language", b =>
                {
                    b.HasOne("Snippit.Models.Snippit", "Snippit")
                        .WithMany()
                        .HasForeignKey("SnippitId1");

                    b.Navigation("Snippit");
                });

            modelBuilder.Entity("Snippit.Models.LanguageAssignment", b =>
                {
                    b.HasOne("Snippit.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Snippit.Models.Snippit", "Snippit")
                        .WithMany()
                        .HasForeignKey("SnippitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Snippit");
                });

            modelBuilder.Entity("Snippit.Models.Author", b =>
                {
                    b.HasOne("Snippit.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("Snippit.Models.Author", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Snippit.Models.Moderator", b =>
                {
                    b.HasOne("Snippit.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("Snippit.Models.Moderator", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
